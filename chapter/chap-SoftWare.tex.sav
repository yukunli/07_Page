\chapter{水分测量系统软件设计}
\label{chap5}

软件设计是本课题非常重要的一部分工作，本章将对水分测量系统的软件部分进行设计和说明，包括两大部分：下位机软件设计和上位机软件设计。下位机软件设计除了阐述正弦信号发生程序、数据采集程序、控制器与工业串口屏通信程序以及温控程序外，重点实现了数字锁相放大器的~C~语言算法实现。从~A/D~采集回来的正弦信号序列经过数字锁相放大器后能够得到高信噪比的信号幅值，从而参与烧结料水分含量的计算。上位机主要是组态工业串口屏软件的设计，串口屏能够直观、实时地显示当前物料的水分含量，是水分测量系统必不可少的人机交互窗口。

\section{软件系统整体软件设计}

水分测量系统的软件设计包括下位机~DSP~驱动程序的设计、数字锁相放大器算法设计以及组态工业串口屏设计。其中，DSP~驱动程序主要实现正弦信号的发生、模拟数据的采集、数据的实时通讯、温度的检测和控制以及指示报警等功能。系统整体的软件流程如图~\ref{fig75}~所示。
\begin{figure*}[!h]
\centering
\includegraphics[width=16cm]{fig75.pdf}
\caption {系统软件流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig75} System software flow chart}
\end{figure*}

\section{下位机软件设计}

\subsection{正弦信号发生程序的设计}

DSP~控制器通过~SPI~接口方式可以对~AD9833~进行编程，从而控制其产生所需要的波形。这里采用~MOSI~ 主出从入的工作模式，即~DSP~作为主器件控制~AD9833~。按照~AD9833~数据手册上~SPI~的控制时序图，在串口时钟的作用下，数据以~16~位的方式加载到设备上。

AD9833内的寄存器为~16~位，通过对~AD9833~的控制寄存器、频率寄存器和相位寄存器写入控制字可完成对~AD9833~的配置。AD9833~的数据写入流程以下面的例子说明。如果要输出~100Hz~的正弦信号，相位为~0$^{\circ}$C，则通过~SPI~输入数据依次为：0x2100，0x4A7C，0x4000，0xC000，0x0000。其中~0x2100~设置控制寄存器，表示进入配置状态；0x4A7C 与~0x4000~表示在频率寄存器~0~中写入~0x0A7C（低位在前）；0xC000~ 表示在相位寄存器~0~中写入~0x000；0x0000~表示输出使能，信号频率为频率寄存器~0~中存储的频率，相位为相位寄存器~0~中存储的相位，输出信号为正弦波。

AD9833~的软件流程图如~\ref{fig76}~所示。
\begin{figure*}[!h]
\centering
\includegraphics[width=7cm]{fig76.pdf}
\caption {AD9833~软件流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig76} AD9833 software flow chart}
\end{figure*}

\subsection{数据采集程序的设计}
本课题有三路正弦信号进入~A/D~转换通道进行同步模数转换，所以对于~AD7656~而言，其采样频率的选取应综合三路正弦信号频率满足奈奎斯特采样定律以及~AD~芯片最大转换速率进行考虑。基于第~3~章节对数字锁相放大器的仿真和分析，本文选用~120kHz~作为采样频率对这三路信号进行采样和转换，每路信号连续采集~420~个点序列。
\begin{figure*}[!h]
\centering
\includegraphics[width=13cm]{fig73.png}
\caption {AD7656~并行接口模式工作时序图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig73} Work sequence diagram of AD7656~ parallel interface mode}
\end{figure*}

\begin{figure*}[htb]
\centering
\includegraphics[width=11cm]{fig74.pdf}
\caption {数据采集程序流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig74} Data acquisition program flow chart}
\end{figure*}

本文采用~AD7656~并行工作模式，图~\ref{fig73}~所示是~AD7656~在并行方式下的工作时序图。首先通过脉冲激活~CONVST~输入来启动模数转换，并保持为高电平。当转换过程结束后，BUSY~信号会出现下降沿，此时，可通过控制片选和读信号引脚来依次读出各个通道的~AD~转换值。在读出转换值后，改变~CONVST~为低电平，为下一次转换做准备。本课题通过控制~CONVST A~和~CONVST B~信号转换前4路通道的模拟信号，前3路信号为待测信号，第四路信号为模拟地。

本文设计的数据采集程序主要包括~TMS320F28335~的~IO~口初始化、AD7656~控制时序的产生及状态查询、采集数据的处理。其程序的流程图如图~\ref{fig74}~ 所示.

\subsection{数据通讯程序的设计}
下位机的通讯程序主要功能是将~DSP~处理后的数据发送到组态工业串口屏进行显示，本文设计的通讯采用~TMS320F28335~的串行通信接口（~SCI~），与~UART~ 类似。SCI~接收器和发送器各自拥有一个~16~级深度的~FIFO，也各自拥有自己的使能和中断位，两者都能独立进行半双工通信，或者联立建立全双工通信。为了保证数据的完整性，SCI~模块会对接收到的数据进行简断检测、奇偶性、溢出和帧错误等检测。通过一个~16~ 位波特率寄存器的编程，可配置不同的通信速率。

本课题采用的组态工业串口屏是集~TFT~显示驱动、图片字库存储、GUI~操作、RTC~显示及各种组态控件于一体的串口显示终端。本章第~\ref{end_TFT}~节将对该触摸屏做详细的介绍。

工业串口屏通过指令帧的方式与微控制器进行数据通信。当触摸屏有画面切换或动作更新时，会通过一定格式的指令帧将信息发送回下位机，下位机接收到帧信息并对帧信息解释后执行相应的处理，并按照指令帧的格式将动作信息或数据信息发送给触摸屏。一条完整的串口指令帧格式如表~\ref{table51}~所示。如果指令参数大于~1~ 个字节，则高字节在前、低字节在后。指令的最大长度为~1024~字节（包含帧头和帧尾），数值均为十六进制。串口格式：8~位数据位、1~位停止位、无效验位。
\begin{table*}[!h]\tiny
\caption{无~CRC~校验指令帧格式}
\addtocounter{table}{-1}
\renewcommand\tablename{Table}
\caption{No CRC check instruction frame format}
\label{table51}
\small
%\setlength\tabcolsep{2.8pt}
\renewcommand{\arraystretch}{1.5}
\centering
\begin{tabular}{cccccccccccccccccccc}
\\
\bottomrule
%           \cline{2-4}\cline{6-8}
~~~指令~~~  &&&& EE   &&&&     XX    &&&&~~XX~XX~$\cdot\cdot\cdot$~XXX~~&&&& ~~FF~FC~FF~FF~~ \\
\hline
说明  &&&& ~~~帧头~~~ &&&&    ~~~指令~~~   &&&& ~~指令参数~~     &&&& 帧尾   \\
\bottomrule
\end{tabular}
\end{table*}

为了使~DSP~控制能够很好的接收或发送指令来控制触摸屏显示，本课题设计如图~\ref{fig72}~所示的程序驱动架构，其中最下层为用户处理串口的硬件驱动，往上一层为串口屏的命令帧驱动，再上面一层是串口消息响应处理函数，最上面为用户应用代码。
\begin{figure*}[!h]
\centering
\includegraphics[width=8cm]{fig72.pdf}
\caption {DSP~程序驱动框架}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig72} DSP~ Driver Framework}
\end{figure*}

基于以上程序框图，本课题的~DSP~与通信程序流程如图~\ref{fig71}~所示。
\begin{figure*}[!h]
\centering
\includegraphics[width=10cm]{fig71.pdf}
\caption {触摸屏串口通信程序流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig71}  Program flow chart of touch screen serial communication}
\end{figure*}

\subsection{温度控制程序的设计}

温度控制系统具有时变性、滞后性和非线性的特点，所以建立温度控制系统的精确数学模型是困难的。在工程实际中，应用最为广泛的控制规律为~PID~控制，PID~控制器具有稳定性好、工作可靠、参数整定方便、结构改变灵活、鲁棒性强等优点，本文采用数字~PID~进行温度控制。
数字~PID~控制器源于模拟~PID~控制器，在其基础上，将其数字化得到差分方程的形式。数字~PID~算法有位置式和增量式两种，增量式~PID~算法只需要计算最近的三次偏差值，累计误差相对较小，因此，本文采用增量式~PID~算法对温度进行控制。
\begin{equation}\label{eq50}
\begin{split}
  \Delta y(k)&= y(k)-y(k-1)   \\
  & =K_{P}[e(k)-e(k-1)]+K_{I}e(k)+K_{D}[e(k)-2e(k-1)-e(k-2)]
\end{split}
\end{equation}

式~\ref{eq50}~为增量式~PID~算法\upcite{[53]}。式中，$e(k)$~为第~$k$~次采样偏差，$e(k-1)$为第~$k-1$~次采样偏差，$e(k-2)$~为第~$k-2$~次采样偏差。

温度通过数字温度传感器~DS18B20~进行采集，DS18B20采用单总线方式与控制器进行通讯。首先要复位~DS18B20~并对其进行初始化，然后~DSP~发送相关控制指令给
~DS18B20~以获取温度并转换，紧接着再次对~DS18B20~进行复位，DSP~发出相关指令读取~DS18B20~中寄存器中存储的温度数据。本课题需要测量两点的温度，两个温度传感器挂接在同一条数据线上，所以在读取温度数据时，需要连续读取两次温度数据，温度控制流程图如图~\ref{fig69}~所示。
\begin{figure*}[!h]
\centering
\includegraphics[width=6cm]{fig69.pdf}
\caption {探测器温度控制流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig69}  Temperature control flow chart of the detector}
\end{figure*}

\section{数字锁相放大器软件设计}
本文第三章节对数字锁相放大器进行过详细的分析，其核心的相关运算由~DSP~内部软件实现，主要包括：

（1）参考信号的产生。

（2）相敏检波运算的实现。

（3）数字低通滤波器的实现。

（4）幅值的计算输出。

\subsection{参考信号的产生}
基于~DSP~产生正弦序列的方法有很多，在精度和运算速度上也会有差异，下面将介绍几种常用的方法。

（1）函数法

通过利用~DSP~内部的正弦函数直接计算，给出精确到每个角度的正弦波形值，该方法算法简单，占用的存储空间小，精度可以通过算法进行调整，但计算量大，耗时。通常用于精度要求高，实时性要求低的场合。

（2）查表法

查表法是一种最直接的方式，设计者可以根据运算的需要提前计算好所有可能出现的正弦函数值，将这些结果编排成数据表，在使用时根据所需正弦信号的频率和相位在正弦表中找到对应的正弦值。该实时性好，可以快速产生所需正弦信号，但在精度要求高的情况下就需要使用很大的表来存储标准正弦信号，即需要大量的存储空间，所以该方法通常适用于实时性要求高，精度要求相对低的场合\upcite{sin}。

（3）级数逼近法

级数逼近法是用级数的方法在某一自变量取值范围内去逼近数学函数，而将自变量取值在此范围外的函数值利用一些数学关系，用该范围内的数字来表示。对于正弦信号。从正弦函数的对称性可知，只需要计算取值在~[0,$\pi/2$]~内的函数值就可以推断出所有取值范围内的函数值。级数逼近法的最大优点是灵活度高，且不存在误差积累，使用范围较广，但是要获得较高的精度需要的时间复杂度也大。

本次设计选用了函数法和查表法相结合的方式来产生正弦信号，由于三角函数的周期性，只要存储三角函数一个周期的函数值，就能获得整个采样序列所有采样点的正弦值。因此，使用正弦函数来产生一个周期三角函数值，将该周期采样值存入数组中，在使用时直接查找对应的正弦值即可。对一个周期的正弦值进行采样的代码实现是：

for~(i = 0;~i $<$ N;~i++)

$\{$

~~~~~~SIN$_{-}$TAB[i] = sin(2$\pi$i$f$/$f_{s}$);

$\}$

上述语句中，$f$~是正弦序列的频率，$f_{s}$~是正弦序列的采样频率，$N$~是一个周期的采样点数，$N = f_{s}/f$，$N$~必须是整数。

得到一个周期的采样值后，存储在数组~SIN$_{-}$TAB[~N~]~中，可通过查表的方式获得整个序列的采样点值，代码实现是：

for~(i = 0;~i $<$ Length;~i++)

$\{$

~~~~~~sin$_{-}$wave[i] = SIN$_{-}$TAB(i\%(Length/N));  $\sharp$~Length~为整个正弦参考序列的长度

$\}$

上述设计的是正弦信号参考序列的生成方式，余弦信号序列可通过正弦信号移相~$90^{o}$~的方式产生。

\subsection{相关运算的实现}
本节重点介绍数字锁相放大器的核心算法相关运算的~C~语言实现，带噪声的正弦信号与同频正弦参考信号做同相相关，与同频余弦参考信号做正交相关。根据式~\ref{s13}编写程序来实现相关运算。

相关运算算法的流程图如图~\ref{fig77}~所示。
\begin{figure*}[!h]
\centering
\includegraphics[width=12cm]{fig77.pdf}
\caption {相关运算流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig77} Related operation flow chart}
\end{figure*}

Temp1~是正弦序列与待测信号乘累加之和，Temp2~是余弦系列与待测信号乘累加之和，待测信号的数据长度~Length~决定了乘累加运算的次数。每次乘累加运算后进行无偏估计，得到一个~$R_{-}sin$~和~$R_{-}cos$~值。因此最后能够得到一个长度为~Length~的~$R_{-}sin$~序列和~$R_{-}cos$~序列，即同相相关结果和正交相关结果。
\begin{figure*}[!h]
\centering
\includegraphics[width=7cm]{fig78a.png}
\includegraphics[width=7cm]{fig78b.png}
\includegraphics[width=7cm]{fig78c.png}
\includegraphics[width=7cm]{fig78d.png}
\caption{相关运算输入和输出结果图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig78} Correlation operation input and output result diagram}
\end{figure*}

对上述设计的相关运算代码进行测试，测试在~DSP~硬件平台上完成，图~\ref{fig78}~是参与运算的输入信号和输出离散信号图。a~图是用于测试的信号，b~图是在~a~图所示的信号上叠加了随机白噪声，经过相关运算后，输出同相相关结果序列和正交相关结果序列，可以看到，两个相关结果序列的波形比较平滑，大部分的噪声被滤掉了。

要想获得有用信号的输入信号的幅值，需对两相关结果序列进行幅值计算，根据式~\ref{s16}~，将同相相关结果序列和正交相关结果序列对应数据进行平方和再开方运算，得到输入信号的幅值序列，其实现代码为：

for~(i = 0;~i $<$ Length;~i++)

$\{$

~~~~~~ampli$_{-}$out[i] = 2$\ast$isqrt(R$_{-}$sin[i]$\ast$R$_{-}$sin[i]+R$_{-}$cos[i]$\ast$R$_{-}$cos[i]);

$\}$


\subsection{数字滤波器的设计}

经过相关运算得到的信号幅值序列中，包含了其它的频率的成分，只有通过低通滤波器滤掉高频成分，留下直流成分，才能真正的得到输入信号的幅值。本节将对数字低通滤波器进行设计。
\subsubsection{FIR~滤波器的设计}
DSP~处理器是专为数字信号处理设计的，所以在~DSP~上可以有效实现数字滤波器，且速度快、稳定性好、编程方便。数字滤波器分为无限冲激响应滤波器(~IIR~) 和有限冲激响应滤波器(~FIR~)。FIR~滤波器在保证幅度特性满足技术要求的同时，很容易做到严格的线性相位特性。同时，FIR~滤波器没有反馈回路，稳定性高且过渡过程具有有限区间，所以本文采用~FIR~数字滤波器实现数字低通滤波

FIR~滤波器的设计方法主要有窗函数设计法和频率抽样设计法等，其中窗函数设计法是最基本的设计方法。在设计~FIR~滤波器中，一个最重要的计算就是加窗，采用矩形窗是最直接和简便的方法，但采用矩形窗存在较大的~Gibbis~效应，且矩形窗的第一旁瓣与主瓣相比仅衰减~13~dB，因此实际设计中一般采用其他窗函数。表~\ref{table50}~列出了几种常用窗函数对比。
\begin{table*}[!ht]\tiny
\caption{几种常用窗函数对比}
\addtocounter{table}{-1}
\renewcommand\tablename{Table}
\caption{Compared to serveral windows function }
\label{table50}
\small
%\setlength\tabcolsep{2.8pt}
\renewcommand{\arraystretch}{1.5}
\centering
\begin{tabular}{ccccccccccccccccccccccc}
\\
\bottomrule
%           \cline{2-4}\cline{6-8}
窗函数&& ~旁瓣峰值衰减（dB）~ &&~~过渡带（$\Delta\omega$）~~&&~阻带最小衰减（dB）~\\
\hline
矩形窗&&-13&& 4$\pi$/N  &&-21\\
三角窗&&-27&& 8$\pi$/N  &&-25\\
汉宁窗&&-31&& 8$\pi$/N  &&-44\\
三角窗&&-41&& 8$\pi$/N  &&-53\\
~~布莱克曼窗~~&&-57&& 12$\pi$/N  &&-74\\
凯撒窗&&-57&& 10$\pi$/N  &&-80\\
\bottomrule
\end{tabular}
\end{table*}

在窗函数的选择中，旁瓣幅度越低、旁瓣幅度下降越大、主瓣宽度越窄，则设计的滤波效果越好。但在实际中，这三点是很难同时满足的。而凯塞窗（Kaiser）是在给定阻带衰减下给出一种大的主瓣宽度意义上的最优结果，所以它是一种适应性较强的窗，本文选择~Kaiser~窗来设计~FIR~滤波器。

MATLAB~中的~fdatool~工具集成了数字滤波器的各种设计方法，简化了设计过程。本文利用~MATLAB~中的~fdatool~工具设计一个基于~Kaiser~窗的~FIR~数字低通滤波器。

本课题要对三路待测信号分别进行数字锁相放大器运算，所以要分别设计三路不同截止频率的数字低通滤波器。图~\ref{fig80}~是对其中一路的数字滤波器设计界面，其中设置采样频率为~50KHz，通带截止频率为~4.1KHz，阻带截止频率为~6KHz，通带衰减为~1dB，阻带衰减为40dB。在设计完成后，由~fdatool~工具可导出单精度浮点数的滤波器系数，便得到了所要设计的~FIR~数字低通滤波器，滤波器阶次为~50。另外的两路数字低通滤波器系数可通过类似的方式获得。
\begin{figure*}[!h]
\centering
\includegraphics[width=14cm]{fig80.png}
\caption{fdatool~数字低通滤波器设计界面}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig80} Digital low pass filter design interface on fdatool}
\end{figure*}

\subsubsection{FIR滤波器的~DSP~实现}
FIR~滤波器工作原理就是一个离散信号序列通过一个离散滤波系统，得到离散输出信号的过程，如果滤波系统的单位脉冲响应为~h(n)，信号序列为~x(n)，输出信号为~y(n)，则他们之间的运算关系式可表示如下：
\begin{equation}\label{c7-1}
  y(n) = x(n)\ast h(n) = \sum^{M}_{m=0}h(m)x(n-m)
\end{equation}

式~\ref{c7-1}表示了~FIR~滤波器的输入信号与系统响应之间的关系，即为线性卷积运算。

一般有两种方式实现~FIR滤波：直接卷积法和快速卷积法。直接卷积法是根据卷积的迭代运算直接计算输入信号序列与滤波器系数的卷积，得到滤波器输出信号，该方法运算关系简单，但耗时较长。

快速卷积法是利用时域的卷积等于频域的乘积的关系，将时域信号转换为频域信号，进行乘积运算之后再将结果转换为时域信号而实现的。由于快速傅里叶变换（~FFT~）可以高效地将时域信号转换为频域信号，其运算的复杂度为~O(N*log(N))，因此三次~FFT~运算加一次乘积运算的总复杂度仍然为~O(N*log(N))~级别，而卷积运算的复杂度为~O(N*N)。所以快速卷积与直接卷积相比，虽然算法复杂了，但相同的点数下运算时间短，而且点数越多耗时就越短。

考虑到水分测量系统的实时性要求和三路锁相放大器运算对运算速度的要求，本文选择通过快速卷积法实现~FIR~滤波。

\begin{figure*}[!h]
\centering
\includegraphics[width=11cm]{fig81.png}
\caption{分段卷积过程演示图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig81} Demonstration of overlap-add process}
\end{figure*}

FFT~运算时假设其所计算的信号为周期信号，因此通过上述快速卷积法计算出的结果实际上是两个信号的循环卷积（或叫圆周卷积），而不是线性卷积。为了用~FFT~计算线性卷积，需要对信号进行补零扩展，使得其长度大于线性卷积结果的长度。在本课题中，如果低通滤波器的阶次为~50，而参与卷积的输入信号长度为~840~点，则需要将滤波器系数和输入信号长度均补零到至少~889~个点，这将意味着~DSP~要做很多冗余的计算，快速卷积运算速度快的优势也不能体现出来。所以引入分段卷积法可以解决以上的问题。


分段卷积法就是将长度很长的输入序列分解为若干个较小的段，对每一个输入段分别计算相应的线性卷积，然后把每段的输出按照一定的方法组合在一起，得到最终的输出序列\upcite{}。根据分段方式的不同，分段卷积法分为重叠相加法（Overlap-add Method）和重叠保留法（Overlap-save Method）两种。其中重叠相加法的分段卷积过程如图~\ref{fig81}~所示。

本文通过重叠相加算法实现~FIR~滤波，其软件流程图如图~\ref{fig82}~所示。

\begin{figure*}[!h]
\centering
\includegraphics[width=5cm]{fig82.pdf}
\caption{数字低通滤波软件流程图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig82} Digital low pass filtering software flow chart}
\end{figure*}

为了验证~FIR~数字低通滤波器的处理效果，本文对上节中相关运算输出的幅值序列而做重叠相加法运算，得到如图~\ref{fig79}~所示的信号幅值图。可以看到，虽然在时域上存在一定的延时，但是在曲线的中间部分能够得到一段平整的幅值，并且其幅值大小与最初给定的信号幅值大小一致。
\begin{figure*}[!h]
\centering
\includegraphics[width=7cm]{fig79a.png}
\includegraphics[width=7cm]{fig79b.png}
\caption{输入信号幅值图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig79} Useful signal amplitude of the signal to be measured}
\end{figure*}

\section{工业串口屏软件设计}\label{end_TFT}

本系统的人机交互采用组态串口触摸屏进行显示和按键等操作。当前工控领域~TFT~显示已成为发展趋势，传统的~1602、12864~以及数码管已经无法满足产品需求和用户体验。广州大彩光电科技有限公司推出的工业串口屏是集~TFT~显示驱动、图片字库存储、GUI~操作、RTC~显示及各种组态控件于一体的串口显示终端。用户单片机只需要发送相应的串口指令就可以轻松实现文本、图片和曲线显示。本课题采用了该公司生产的一款基本型工业串口屏――~DC80480B070。

DC80480B070~能适应恶劣环境、强磁干扰和户外等工作场合。系统处理器采用~Cortex-M3+~高速~FPGA~双核设计，ARM~主要进行协议解析和 USB~图片下载，FPGA~ 主要实现~Nandflash~的图片读取和~TFT~控制显示。内部结构如图~\ref{fig70}~所示。
\begin{figure*}[!h]
\centering
\includegraphics[width=12cm]{fig70.png}
\caption {TFT~串口屏内部结构图}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig70} TFT serial screen internal structure}
\end{figure*}

DSP~需要一个串口就能实现文本、GUI、图片、gif~动画显示和触摸控制等功能，支持多种常用组态控件：触摸控件、文本控件、进度条、滑动条和仪表控件等。设备内部有~4.7K~字节的指令缓存区，用户主机可无等待、连续发送多条指令后退出串口程序。整个过程操作简单，程序代码量大大降低。

操作时，用户首先利用配套的上位机~VisualTFT~软件，将预先设计好的美工图片进行界面排版，并对每个画面中的按钮和其它控件进行配置，软件会为工程中的每个画面、图片和控件分配一个唯一的~ID，可以使用内置的“虚拟串口屏”进行模拟仿真，最后通过~UART~通讯方式将整个工程图片和配置信息下载到串口屏内部存储器中。

本课题为水分测量系统设计了4个页面，主界面如图\ref{fig83}所示，用于显示实时水分值、探测器温度值以及为其它页面提供跳转按钮。
\begin{figure*}[!h]
\centering
\includegraphics[width=10cm]{fig83.png}
\caption {触摸屏主界面}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig83} Touch screen main interface}
\end{figure*}

图~\ref{fig84}~是触摸屏的设置界面和历史曲线界面，用于在工业现场对水分仪进行参数修正，以及查看一定时间端内的历史水分含量曲线。
\begin{figure*}[!h]
\centering
\includegraphics[width=7cm]{fig84a.png}
\includegraphics[width=7cm]{fig84b.png}
\caption{设置界面和历史曲线界面}
\addtocounter{figure}{-1}
\renewcommand\figurename{Fig.}
\caption{\label{fig84} Set interface and history curve}
\end{figure*}

\section{本章小结}
本章详细介绍了数据的采集与数字锁相放大器处理，特别是数字锁相放大器器，本章从参考信号的产生、相关运算的实现、幅值计算和数字低通滤波器方面均做了详细的分析，并编写了基于~DSP~ 微控制器的软件程序，并给出了各部分的程序流程图。最后简单介绍了工业组态串口屏，编写了组态界面以及程序，实现了文本显示、参数设置等人机交互。















